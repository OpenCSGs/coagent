[project]
name = "coagent"
version = "0.0.1"
description = ""
authors = ["Your Name <you@example.com>"]
requires-python = ">=3.10"

[tool.poetry]
name = "coagent"
version = "0.0.1"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = ">=3.10.0,<3.14"
pydantic = ">=2.7.0"
openai = "1.52.1"
nats-py = "2.9.0"
textual = "0.85.1"
requests = "2.32.3"
pygtrie = "2.5.0"
httpx = "0.27.2"
h2 = "4.1.0"
httpx-sse = "0.4.0"
blinker = "1.9.0"
loguru = "0.7.3"
jq = "1.8.0"

[tool.pyright]
# https://github.com/microsoft/pyright/blob/main/docs/configuration.md
useLibraryCodeForTypes = true
exclude = [".cache"]

[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
exclude = ['coagent/agents/aswarm']

[tool.ruff.format]
exclude = ['coagent/agents/aswarm']

[tool.ruff.lint]
select = [
    'F',      # Pyflakes
    'E',      # pycodestyle (Error)
    # 'I',      # isort
    # 'D',      # pydocstyle
    # 'UP',     # pyupgrade
    'YTT',    # flake8-2020
    'B',      # flake8-bugbear
    'T10',    # flake8-debugger
    # 'T20',    # flake8-print
    'C4',     # flake8-comprehensions
    'PYI006', # flake8-pyi
    'PYI062', # flake8-pyi
    'PYI063', # flake8-pyi
    'PYI066', # flake8-pyi
]
ignore = [
    'B007',
    'B008',
    'B011',
    'B012',
    'B028',
    'B904',
    'C401',
    'C408',
    'E501',
    'F401',
    'F841',
]

[tool.poetry.scripts]
coagent = "coagent.cli:main.main"

[dependency-groups]
linting = [
    "ruff",
]
testing = [
    "pytest",
    "pytest-cov",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

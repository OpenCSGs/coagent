name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request: {}

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --group linting

      - name: Run formatting
        run: uv run ruff format --diff
        continue-on-error: true

      - name: Run linting
        run: uv run ruff check --output-format=github

  test:
    runs-on: ${{ matrix.os }}
    name: Test ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2

      - name: Install dependencies
        run: uv sync --group testing

      - name: Run tests
        run: make test

  release:
    #if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    environment: release

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      #- name: check GITHUB_REF matches package version
      #  uses: samuelcolvin/check-python-version@v4.1
      #  with:
      #    version_file_path: pyproject.toml

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Build release distributions
        run: poetry build

      #- name: Publish to PyPI
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    packages-dir: dist/
